syntax = "proto3";

package formulaserver;

import "f1messages.proto";

service MessagePassing {

  // SimulationStart
  //
  // Unary RPC, the server gets a simulation request with an ID from the client.
  // The server starts the simulation, and sends a flag to the client notifing whether the simulation started
  // succesfully or not.
  rpc SimulationStart(SimulationStartRequest) returns (MessageAck) {}

  // SimulationEnd
  //
  // Unary RPC, the server gets a simulation end notifiaction with an ID from the client.
  // The server ends the simulation, and sends a flag to the client notifing whether the simulation ended
  // succesfully or not.
  rpc SimulationEnd(NotifySimulationEnd) returns (MessageAck) {}


  rpc GetCarState(CarState) returns (MessageAck) {}

  rpc GetTimedDriveInstructions(TimedDriveInstructions) returns (MessageAck) {}

  rpc GetMessage(Message) returns (MessageAck) {}

}

// SimulationStartRequest
//
// Sent from the client when they want to start a simulation
message SimulationStartRequest {
  // ID of the simulation
  int32 simulationid = 1;
}

// NotifySimulationEnd
//
// Sent from the client when they want to notify the server
// that the simulation ended
message NotifySimulationEnd {
  // ID of the simulation
  int32 simulationid = 1;
}

message MessageAck {
  string ackmessage = 1;
}